<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rails | J.Wo]]></title>
  <link href="http://jessewolgamott.com/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://jessewolgamott.com/"/>
  <updated>2015-03-06T09:46:43-06:00</updated>
  <id>http://jessewolgamott.com/</id>
  <author>
    <name><![CDATA[Jesse Wolgamott]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails and the next 5 years]]></title>
    <link href="http://jessewolgamott.com/blog/2014/12/05/rails-and-the-next-5-years/"/>
    <updated>2014-12-05T09:54:00-06:00</updated>
    <id>http://jessewolgamott.com/blog/2014/12/05/rails-and-the-next-5-years</id>
    <content type="html"><![CDATA[<p>After a few flirtatious encounters with Ruby, I left .NET in 2009.
I was looking for something better, something where I
didn’t use an IDE, something where I didn’t feel like I was fighting the
entire culture, and a place I could be happy being a devloper again.</p>

<p>I found Rails. I found open source. I found Ruby. And I found myself.</p>

<p>Ruby/Rails to me: a community where people help each other learn, full of
interesting and fun challenges, and a desire to learn the entire stack from UNIX
to CSS. </p>

<p>Fast forward 5 years; I’ve been thinking about what the next 5 years will look
like, for both me specifically and for web/mobile application in general.</p>

<p>It’s fairly clear to me that most medium to large’ish apps won’t be a single
Rails app with 100 controllers. That dog has tried to hunt, and well… that
dog won’t hunt. OneLargeRailsApp is not the future. </p>

<p>Rails isn’t going away. I will still use it for prototyping and for
applications where expressiveness is key (billing code and administration of
data are two examples). Rails will become part of the puzzle, not the whole
thing. I don’t envision anything being the entire puzzle anymore. Too much
awesome tech which each do one thing super awesomely.</p>

<h3 id="prediction-apps-in-this-half-decade-will-be-split-up">Prediction: apps in this half-decade will be split up</h3>

<ul>
  <li>Many Apps (iOS/android, some rails, some Ember, some R, some Go)</li>
  <li>Depending on your worldview, <code>gsub/Go/Node|Elixir/</code></li>
</ul>

<p>I don’t anticipate quote-unquote leaving Rails. There’s no need to leave like
there was a need for me to flee .NET. Instead, the communities will merge
together under an open-source umbrella. I doubt there will be one big huge
community in which you do ALL of your development. </p>

<p>The future, in my opinion, is many languages. Many communities. Many meetups. </p>

<p>Bring on the future!</p>

<p>(and my hoverboards. and jetpacks. and flying cars)  </p>

<iframe src="http://giphy.com/embed/3jmLczk5BbfZC?html5=true" width="480" height="261" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen=""></iframe>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The One Where You Run Rake Commands with Capistrano]]></title>
    <link href="http://jessewolgamott.com/blog/2012/09/10/the-one-where-you-run-rake-commands-with-capistrano/"/>
    <updated>2012-09-10T13:38:00-05:00</updated>
    <id>http://jessewolgamott.com/blog/2012/09/10/the-one-where-you-run-rake-commands-with-capistrano</id>
    <content type="html"><![CDATA[<p>Simple Enough, right? Run some rake tasks on your servers. You think it’d be built in, but nope. Drink some sake and let capistrano do the work!</p>

<!-- more -->
<div class="tldr">
	<span class="heading">tl;dr</span> 
Use my codes to only precompile assets on cap:deploy when there is a change to assets or gems.
</div>

<h3 id="first-off-sake-is-not-sake">First Off, Sake is not <code>sake</code></h3>

<p><a href="https://github.com/defunkt">Defunkt</a> wrote <a href="http://rubygems.org/gems/sake">sake</a> in ought-eight (2008) for system wide rake tasks. This isn’t it; this is just a file, name it what you want.</p>

<h3 id="background">Background</h3>

<p>I’ll use rake tasks to do data-migrations that I don’t want to stick around in db/migrations. Or to do one-off things like re-process images.</p>

<p>But it’s not all that awesome to actually run those things in production when you need to. Here’s a way!</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>config/recipes/sake.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">namespace</span> <span class="ss">:sake</span> <span class="k">do</span><span class="o">&lt;</span><span class="n">br</span> <span class="sr">/&gt;</span>
</span><span class='line'><span class="sr">  desc “Run a task on a remote server.”&lt;br /</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="c1"># run like: cap staging rake:invoke task=a_certain_task&lt;br /&gt;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:invoke</span> <span class="k">do</span><span class="o">&lt;</span><span class="n">br</span> <span class="sr">/&gt;</span>
</span><span class='line'><span class="sr">    run(“cd </span><span class="si">#{</span><span class="n">deploy_to</span><span class="si">}</span><span class="sr">/</span><span class="n">current</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span> <span class="c1">#{ENV[‘task’]} RAILS_ENV=#{rails_env}”)&lt;br /&gt;</span>
</span><span class='line'>  <span class="k">end</span><span class="o">&lt;</span><span class="n">br</span> <span class="sr">/&gt;</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Then, make sure you require it
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>config/deploy.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">load</span> <span class="err">“</span><span class="n">config</span><span class="o">/</span><span class="n">recipes</span><span class="o">/</span><span class="n">assets</span><span class="err">”</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And that’s it! Now, when you want to run that code, say to migrate a database:</p>

<div><div class="CodeRay">
  <div class="code"><pre>cap <span class="key">sake</span>:invoke task=<span class="string"><span class="delimiter">&quot;</span><span class="content">db:migrate</span><span class="delimiter">&quot;</span></span>
</pre></div>
</div>
</div>

<p>This is not mind-blowing, but it’s not very obvious for new deployers, so I wanted to add it here for the googlers.</p>

<h2 id="naming-notes">Naming Notes</h2>

<p>Don’t name your task rake – newer versions of rake (0.9.2) are not pleased with that. That’s how I ended on sake. (rake =&gt; sake).</p>

<h2 id="credit">Credit</h2>

<p>This <a href="http://stackoverflow.com/questions/312214/how-do-i-run-a-rake-task-from-capistrano">answer on Stack Overflow</a> had some good stuffs. I modified from there.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The One Where You Take Your Deploy to 11: Asset Pipeline]]></title>
    <link href="http://jessewolgamott.com/blog/2012/09/03/the-one-where-you-take-your-deploy-to-11-asset-pipeline/"/>
    <updated>2012-09-03T14:56:00-05:00</updated>
    <id>http://jessewolgamott.com/blog/2012/09/03/the-one-where-you-take-your-deploy-to-11-asset-pipeline</id>
    <content type="html"><![CDATA[<p>Things I love: the asset pipeline in Rails. Things I detest: Long deploys caused by recompiling the asset-pipeline when <em>I KNOW NOTHING HAS CHANGED</em>. It makes it hard to deploy constantly if each takes 2 minutes.</p>

<!-- more -->
<div class="tldr">
	<span class="heading">tl;dr</span> 
Use my codes to only precompile assets on cap:deploy when there is a change to assets or gems.
</div>

<h3 id="background">Background</h3>

<ul>
  <li>The asset pipeline needs to be precompiled in order to serve one awesome application.js and application.css file  </li>
  <li>Using a CSS library like Zurb or Bootstrap adds about 2 minutes to the asset pipeline compilation time.</li>
</ul>

<p>So… Here’s a solution to fast-compile your assets by only checking if the changeset includes changes under:</p>

<ul>
  <li>app/assets </li>
  <li>lib/assets </li>
  <li>vendor/assets </li>
  <li>Gemfile.lock </li>
  <li>config/routes.rb</li>
</ul>

<p>The assets is pretty self-explanatory. We compile if the Gemfile.lock changed to catch if something like twitter-bootstrap-rails was added or updated. At first the config/routes.rb seems out of place, but it’s in case you load an engine (or remove one).</p>

<h2 id="the-code">The code!</h2>

<p>Make sure you’re loading deploy/assets</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Capfile  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">load</span> <span class="err">‘</span><span class="n">deploy</span><span class="o">/</span><span class="n">assets</span><span class="err">’</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>config/recipes/assets.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># -&lt;em&gt;- encoding : utf-8 -&lt;/em&gt;-                                                                                                    &lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">set</span> <span class="ss">:assets_dependencies</span><span class="p">,</span> <span class="sx">%w(app/assets lib/assets vendor/assets Gemfile.lock config/routes.rb)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;namespace :deploy do</span>
</span><span class='line'><span class="sr">  namespace :assets do&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">desc</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span><span class="no">DESC</span>
</span><span class='line'>  <span class="no">Run</span> <span class="n">the</span> <span class="n">asset</span> <span class="n">precompilation</span> <span class="n">rake</span> <span class="n">task</span><span class="o">.</span> <span class="no">You</span> <span class="n">can</span> <span class="n">specify</span> <span class="n">the</span> <span class="n">full</span> <span class="n">path</span> <span class="p">\</span>
</span><span class='line'>  <span class="n">to</span> <span class="n">the</span> <span class="n">rake</span> <span class="n">executable</span> <span class="n">by</span> <span class="n">setting</span> <span class="n">the</span> <span class="n">rake</span> <span class="n">variable</span><span class="o">.</span> <span class="no">You</span> <span class="n">can</span> <span class="n">also</span> <span class="p">\</span>
</span><span class='line'>  <span class="n">specify</span> <span class="n">additional</span> <span class="n">environment</span> <span class="n">variables</span> <span class="n">to</span> <span class="n">pass</span> <span class="n">to</span> <span class="n">rake</span> <span class="n">via</span> <span class="n">the</span> <span class="p">\</span>
</span><span class='line'>  <span class="n">asset_env</span> <span class="n">variable</span><span class="o">.</span> <span class="no">The</span> <span class="n">defaults</span> <span class="ss">are</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">set</span> <span class="ss">:rake</span><span class="p">,</span>      <span class="s2">&quot;rake&quot;</span>
</span><span class='line'>    <span class="n">set</span> <span class="ss">:rails_env</span><span class="p">,</span> <span class="s2">&quot;production&quot;</span>
</span><span class='line'>    <span class="n">set</span> <span class="ss">:asset_env</span><span class="p">,</span> <span class="s2">&quot;RAILS_GROUPS=assets&quot;</span>
</span><span class='line'>    <span class="n">set</span> <span class="ss">:assets_dependencies</span><span class="p">,</span> <span class="n">fetch</span><span class="p">(</span><span class="ss">:assets_dependencies</span><span class="p">)</span> <span class="o">+</span> <span class="sx">%w(config/locales/js)</span>
</span><span class='line'><span class="no">DESC</span>
</span><span class='line'><span class="n">task</span> <span class="ss">:precompile</span><span class="p">,</span> <span class="ss">:roles</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="ss">:web</span><span class="p">,</span> <span class="ss">:except</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="p">{</span> <span class="ss">:no_release</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="kp">true</span> <span class="p">}</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">from</span> <span class="o">=</span> <span class="n">source</span><span class="o">.</span><span class="n">next_revision</span><span class="p">(</span><span class="n">current_revision</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">capture</span><span class="p">(</span><span class="s2">&quot;cd </span><span class="si">#{</span><span class="n">latest_release</span><span class="si">}</span><span class="s2"> &amp;amp;&amp;amp; </span><span class="si">#{</span><span class="n">source</span><span class="o">.</span><span class="n">local</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="n">from</span><span class="p">)</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">assets_dependencies</span><span class="o">.</span><span class="n">join</span> <span class="s1">&#39; &#39;</span><span class="si">}</span><span class="s2"> | wc -l&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">to_i</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="mi">0</span>
</span><span class='line'>    <span class="n">run</span> <span class="sx">%Q{cd </span><span class="si">#{</span><span class="n">latest_release</span><span class="si">}</span><span class="sx"> &amp;amp;&amp;amp; </span><span class="si">#{</span><span class="n">rake</span><span class="si">}</span><span class="sx"> RAILS_ENV=</span><span class="si">#{</span><span class="n">rails_env</span><span class="si">}</span><span class="sx"> </span><span class="si">#{</span><span class="n">asset_env</span><span class="si">}</span><span class="sx"> assets:precompile}</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">logger</span><span class="o">.</span><span class="n">info</span> <span class="s2">&quot;Skipping asset pre-compilation because there were no asset changes&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>config/deploy.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">load</span> <span class="err">“</span><span class="n">config</span><span class="o">/</span><span class="n">recipes</span><span class="o">/</span><span class="n">assets</span><span class="err">”</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2 id="how-does-it-know">How does it know?</h2>

<p>The regular assets:precompile task is getting overridden by our custom task. We then:</p>

<ol>
  <li>get the FROM git revision</li>
  <li>get the git log of changes from the FROM to the TO that include our paths we care about</li>
  <li>Pipe that into wc to see if there’s anything there</li>
</ol>

<p>If there is, then we call the rake assets:precompile (like calling <code>super</code>)</p>

<h2 id="output">Output</h2>

<div><div class="CodeRay">
  <div class="code"><pre>    triggering after callbacks <span class="keyword">for</span> <span class="shell"><span class="delimiter">`</span><span class="content">deploy:update_code'
  * executing </span><span class="delimiter">`</span></span><span class="key">deploy</span>:<span class="key">assets</span>:precompile<span class="string"><span class="delimiter">'</span><span class="content">
  * executing &quot;cat /home/deployer/apps/yourapp/current/REVISION&quot;
    servers: [&quot;yourapp.comalproductions.com&quot;]
    [yourapp.comalproductions.com] executing command
    command finished in 921ms
  * executing &quot;cd /home/deployer/apps/yourapp/releases/20120903203634 &amp;&amp; git log 2e03e2b18530c86a69ba8a2c2d75909142767f5b.. app/assets lib/assets vendor/assets Gemfile.lock config/routes.rb | wc -l&quot;
    servers: [&quot;yourapp.comalproductions.com&quot;]
    [yourapp.comalproductions.com] executing command
    command finished in 400ms
 ** Skipping asset pre-compilation because there were no asset changes
</span></span></pre></div>
</div>
</div>

<p>PROOF: 400ms &lt; 2.5 minutes</p>

<h2 id="credit">Credit</h2>

<p>This <a href="https://gist.github.com/3072362">Gist</a> by <a href="https://github.com/xdite">@xdite</a> is the direct source for the code. I’ve used this in several projects and think it’s awesome-sauce.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RailsConf 2012 Ignite Talk: ActiveRecord and Velveeta]]></title>
    <link href="http://jessewolgamott.com/blog/2012/06/06/railsconf-2012-ignite-talk-activerecord-and-velveeta/"/>
    <updated>2012-06-06T09:46:00-05:00</updated>
    <id>http://jessewolgamott.com/blog/2012/06/06/railsconf-2012-ignite-talk-activerecord-and-velveeta</id>
    <content type="html"><![CDATA[<p>My ignite talk (5 minutes, auto-advancing slides) talk from RailsConf 2012 is online. </p>

<!-- more -->
<div class="tldr">
	<span class="heading">tl;dr</span> ActiveRecord is like Velveeta; you shouldn't know you're consuming it when you consume it.
</div>

<iframe width="560" height="315" src="http://www.youtube.com/embed/Ucma74yqH6w" frameborder="0" allowfullscreen=""></iframe>

<p>On Youtube: <a href="http://www.youtube.com/watch?v=Ucma74yqH6w">ActiveRecord and Velveeta</a></p>
]]></content>
  </entry>
  
</feed>
